{"version":3,"sources":["logo.svg","lookup/components.js","tweets/Lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/Components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BackendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","callBack","nextUrl","undefined","replace","apiTweetList","username","ActionBTN","props","tweet","action","didPerformAction","likes","ClassName","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newValue","current","value","content","ref","required","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userProfileSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","setnextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidReTweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","FeedList","setNextUrl","handleDidRetweet","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetsFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.26c32d05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function BackendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken){\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  \r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import {BackendLookup} from '../lookup'\r\n\r\nexport function apiTweetFeed(callBack, nextUrl) {\r\n  let endpoint = \"/tweets/feed\"\r\n  if (nextUrl !== null && nextUrl !== undefined){\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  BackendLookup(\"GET\",endpoint , callBack)    \r\n}\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    BackendLookup(\"POST\", \"/tweets/create\", callback, {content: newTweet})\r\n  }\r\n\r\n  export function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    BackendLookup(\"POST\", \"/tweets/action\", callback, data)\r\n  }\r\n  \r\n  export function apiTweetDetail(tweetId, callBack) {\r\n      BackendLookup(\"GET\", `/tweets/${tweetId}` , callBack)    \r\n  }\r\n\r\nexport function apiTweetList(username, callBack, nextUrl) {\r\n  let endpoint = \"/tweets/\"\r\n  if (username){\r\n    endpoint = `/tweets/?username=${username}`\r\n  }\r\n  if (nextUrl !== null && nextUrl !== undefined){\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  BackendLookup(\"GET\",endpoint , callBack)    \r\n}","import React from \"react\"\r\nimport {apiTweetAction} from \"./Lookup\"\r\n\r\n\r\nexport function ActionBTN (props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const ClassName = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleActionBackendEvent = (response, status) => {\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction) {\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n\r\n    const handleCLick = (event) => {\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n        \r\n    }\r\n    const display = action.type === 'like' ?  `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={ClassName} onClick={handleCLick}>{display}</button>\r\n  }","import React from \"react\"\r\nimport {apiTweetCreate} from \"./Lookup\"\r\n\r\nexport function TweetCreate (props) {\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n\r\n    const handleBackendUpdate = (response, status) => {\r\n      if (status === 201) {\r\n        didTweet(response)\r\n      } else {            \r\n        console.log(response)\r\n        alert(\"An error ocurred, please try again\")\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      // backend API request\r\n        event.preventDefault()\r\n        const newValue = textAreaRef.current.value       \r\n        apiTweetCreate(newValue, handleBackendUpdate)            \r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n                    </textarea>\r\n                    <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n                </form>\r\n            </div>\r\n}\r\n\r\n  ","import React from \"react\"\r\n\r\n\r\nexport function UserLink (props){\r\n  const {username} = props\r\n  const handleUserLink = (event) => {\r\n    window.location.href = `/profiles/${username}`\r\n  }\r\n\r\n  return <span className='pointer' onClick={handleUserLink}>\r\n    {props.children}\r\n  </span>\r\n}\r\n\r\nexport function UserDisplay (props) {\r\n  const {user, includeFullName, hideLink} = props\r\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\r\n\r\n\r\n  return <React.Fragment>\r\n    {nameDisplay}\r\n   {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\r\n  </React.Fragment>\r\n}\r\n\r\nexport function UserPicture (props) {\r\n  const {user, hideLink} = props\r\n  const userProfileSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n  {user.username[0]}\r\n  </span>\r\n\r\n  return hideLink === true ? userProfileSpan : <UserLink username={user.username}>{userProfileSpan}</UserLink>\r\n}","import React from 'react'\r\nimport numeral from 'numeral'\r\n\r\nexport function DisplayCount (props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n    }","import React, {useState, useEffect} from 'react'\r\n\r\nimport {apiProfileDetail, apiProfileFollowToggle} from \"./lookup\"\r\nimport {UserDisplay, UserPicture} from \"./components\"\r\n\r\nimport {DisplayCount} from \"./utils\"\r\n\r\nfunction ProfileBadge(props){\r\n  const {user, didFollowToggle, profileLoading} = props\r\n  let currentVerb = (user && user.is_following) ? \"Unfollow\": \"Follow\"\r\n  currentVerb = profileLoading ? \"Loading...\" : currentVerb\r\n  const handleFollowToggle = (event) => {\r\n    event.preventDefault()\r\n    if (didFollowToggle && !profileLoading) {\r\n      didFollowToggle(currentVerb)\r\n    }\r\n  }\r\n\r\n  return user ? <div>\r\n    <UserPicture user={user}hideLink />\r\n      <p><UserDisplay user={user} includeFullName hideLink/></p>\r\n      <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"}</p>\r\n      <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n      <p>{user.location}</p>\r\n      <p>{user.bio}</p>\r\n      <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\r\n    </div> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent (props){\r\n    const {username} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileLoading, setProfileLoading] = useState(false)\r\n  \r\n    console.log(username)\r\n    const handleBackendLookup = (response, status) => {\r\n      if (status === 200) {\r\n        setProfile(response)\r\n      }\r\n    }\r\n  \r\n    useEffect(() =>{\r\n      if (didLookup === false){\r\n        apiProfileDetail(username, handleBackendLookup)\r\n        setDidLookup(true)\r\n      }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n      apiProfileFollowToggle(username, actionVerb, (response, status)=> {\r\n        // console.log(response, status)\r\n        if (status === 200){\r\n          setProfile(response)\r\n          // apiProfileDetail(username, handleBackendLookup)\r\n        }\r\n        setProfileLoading(false)\r\n      })\r\n      setProfileLoading(true)\r\n\r\n    }\r\n\r\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/>: null\r\n}","import {BackendLookup} from '../lookup'\r\n\r\nexport function apiProfileDetail(username, callBack) {\r\n    BackendLookup(\"GET\", `/profiles/${username}/` , callBack)    \r\n}\r\n\r\nexport function apiProfileFollowToggle(username, action, callBack) {\r\n    const data = {action: `${action && action}`.toLowerCase()}\r\n    BackendLookup(\"POST\", `/profiles/${username}/follow` , callBack, data)    \r\n}\r\n\r\n","import React, {useState} from \"react\"\r\nimport {ActionBTN} from \"./buttons\"\r\nimport {UserDisplay, UserPicture} from \"../profiles\"\r\n\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? \r\n      <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n  }\r\n\r\n  export function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    let ClassName = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    ClassName = isRetweet === true ? `${ClassName} p-2 border rounded` : ClassName\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/) \r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n    }\r\n    \r\n    const handlePerformAction = (newActionTweet, status) => {\r\n      if (status=== 200){\r\n        setActionTweet(newActionTweet)\r\n      }else if (status === 201){\r\n        if (didRetweet){\r\n          didRetweet(newActionTweet)\r\n        }\r\n      }\r\n      \r\n    }\r\n\r\n    return <div className={ClassName}>\r\n      {isRetweet === true &&  <div className='mb-2'>\r\n  <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span></div>}\r\n        \r\n      <div className='d-flex'>   \r\n        <div className=''>  \r\n          <UserPicture user={tweet.user}/>\r\n        </div>\r\n        <div className='col-11'>\r\n      <div>\r\n      \r\n        <p>\r\n        <UserDisplay includeFullName user={tweet.user} />\r\n        </p>\r\n       <p>{tweet.content}</p>   \r\n      <ParentTweet tweet={tweet} retweeter={tweet.user}/>    \r\n      </div>\r\n      <div className='btn btn-group px-0'>\r\n      {(actionTweet && hideActions !== true) && <React.Fragment>\r\n        <ActionBTN tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display: \"Likes\"}}/>\r\n        <ActionBTN tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display: \"UnLike\"}}/>\r\n        <ActionBTN tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display: \"Retweet\"}}/>\r\n        </React.Fragment>}\r\n        {isDetail === true ? null : <button className='btn btn-outline-primary btn-small' onClick={handleLink}>view</button>}\r\n      </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  }","import React, {useEffect, useState} from \"react\"\r\nimport { apiTweetList} from \"./Lookup\"\r\nimport {Tweet} from \"./detail\"\r\n\r\nexport  function TweetList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState ([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setnextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    // setTweetsInit([...props.newTweets].concat(tweetsInit))\r\n    \r\n    useEffect (() => {\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }    \r\n    }, [props.newTweets,tweets, tweetsInit])\r\n\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setnextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          }else {\r\n            alert(\"There was an error in the connection\")\r\n          }\r\n      }\r\n      apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n      \r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n  const handleDidReTweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit]\r\n    updateTweetsInit.unshift(newTweet)\r\n    setTweetsInit(updateTweetsInit)\r\n    const updateFinalTweets = [...tweets]\r\n    updateFinalTweets.unshift(newTweet)\r\n    setTweets(updateFinalTweets)\r\n  }\r\n\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault()\r\n    if (nextUrl !== null){\r\n      const handleNextResponse = (response, status) => {\r\n        if (status === 200){\r\n          setnextUrl(response.next)\r\n          const newTweets = [...tweets].concat(response.results)\r\n          setTweetsInit(newTweets)\r\n          setTweets(newTweets)\r\n        }else {\r\n          alert(\"There was an error in the connection\")\r\n        }\r\n      }\r\n      apiTweetList(props.username, handleNextResponse, nextUrl)\r\n    }\r\n  }\r\n\r\n  return <React.Fragment>{tweets.map((item, index)=>{\r\n    return <Tweet tweet={item} didRetweet={handleDidReTweet} key={`${index} - item.id`} className='my-5 py-5 border bg-white text-dark'/>\r\n  })}\r\n  {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\r\n  </React.Fragment>\r\n  }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetFeed} from './Lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          }\r\n        }\r\n        apiTweetFeed(handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }\r\n","import React, {useEffect, useState} from \"react\"\r\nimport {TweetCreate} from \"./create\"\r\nimport {TweetList} from \"./list\"\r\nimport {Tweet} from \"./detail\"\r\nimport {apiTweetDetail} from \"./Lookup\"\r\nimport {FeedList} from \"./feed\"\r\n\r\nexport function FeedComponent (props){\r\n  const [newTweets, setNewTweets] = useState ([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <FeedList newTweets={newTweets} {...props} />\r\n      </div>\r\n}\r\n\r\nexport function TweetsComponent (props){\r\n  const [newTweets, setNewTweets] = useState ([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <TweetList newTweets={newTweets} {...props} />\r\n      </div>\r\n}\r\n  \r\nexport function TweetDetailComponent(props) {\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    }else{\r\n      alert(\"there was an error finding your tweet.\")\r\n    }\r\n  }\r\n\r\n  useEffect(() =>{\r\n    if (didLookup === false){\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [didLookup, setDidLookup, tweetId])\r\n\r\n  return tweet === null ? null: <Tweet tweet={tweet} className={props.className}/>\r\n}\r\n\r\n  \r\n  ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from \"./tweets/Index\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from \"./profiles/index\"\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from \"./tweets/Index\"\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl){\n  ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement\nconst tweetsEl = document.getElementById('tweetme-2')\nif (tweetsEl){\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetsFeedEl = document.getElementById('tweetme-2-feed')\nif (tweetsFeedEl){\n  ReactDOM.render(e(FeedComponent, tweetsFeedEl.dataset), tweetsFeedEl);\n}\n\nconst tweetDetailEl = document.querySelectorAll(\".tweetme-detail\")\n\ntweetDetailEl.forEach(container=>{\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n})\n\nconst userProfileBadgeEl = document.querySelectorAll(\".tweetme-profile-badge\")\n\nuserProfileBadgeEl.forEach(container=>{\n  console.log(container)\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}